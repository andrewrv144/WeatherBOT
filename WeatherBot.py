import telebot
import requests
import traceback
from telebot import types

open_weather_token = "6b5ba33aa6df3f67fb18024f6f3ad1eb"
bot = telebot.TeleBot('7707024539:AAFszGFgFe6WZsduVFT0UkcTqPvg0u3a-ng')
apikey = '66c5e677-82c2-4b32-aa11-09327f4c3635'

keyboard = telebot.types.ReplyKeyboardMarkup(True, True)
kb = types.KeyboardButton(text="–ü–æ–º–æ—â—å")
kb2 = types.KeyboardButton(text="–ü–æ–≥–æ–¥–∞", request_location=True)
keyboard.add(kb, kb2)
keyboard1 = telebot.types.ReplyKeyboardMarkup(True, True)
keyboard1.add(kb, kb2)

gl_var = 0

@bot.message_handler(commands=['start'])
def start(message):
    global gl_var
    mess = f'–ü—Ä–∏–≤–µ—Çüëã, {message.from_user.first_name}! –Ø –º–æ–≥—É —Ç–µ–±–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ –∏–ª–∏ –ø–æ—Å–µ–ª–∫–µ! (–Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –Ω–∞–ø–∏—à–∏: "/help")'
    if gl_var == 0:
        bot.send_message(message.chat.id, mess, parse_mode='html', reply_markup=keyboard)
        gl_var = 1
    else:
        bot.send_message(message.chat.id, mess, parse_mode='html', reply_markup=keyboard1)
        gl_var = 0

@bot.message_handler(commands=['help'])
def help(message):
    mess = f"""–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –ª—é–±–æ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ —Å–ª–µ–¥—É–π—Ç–µ –¥–∞–Ω–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:
–î–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "/weather" –∏–ª–∏ "–ü–æ–≥–æ–¥–∞", –¥–∞–ª–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –ø–æ—Å–µ–ª–∫–∞.
–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ —á–µ—Ä–µ–∑ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–≥–æ–¥–∞"."""
    bot.send_message(message.chat.id, mess, parse_mode='html')

@bot.message_handler(commands=['weather'])
def after_text(message):
    msg = bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞: ')
    bot.register_next_step_handler(msg, after_text_2)

def after_text_2(message):
    try:
        if  message.text == '#':
            return
        r = requests.get(
            f"http://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weather_token}&units=metric"
        )
        data = r.json()

        city = data["name"]
        cur_weather = data["main"]["temp"]

        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"]
        wind = data["wind"]["speed"]

        mess = f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}C¬∞\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
        bot.send_message(message.chat.id, mess, parse_mode='html')
    except Exception as e:
        print('gsds', traceback.format_exc())
        if data['cod'] == '404':
            bot.send_message(message.chat.id, "üö´ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ üö´", parse_mode='html')
            after_text(message)

@bot.message_handler(content_types=["location"])
def location(message):
    if message.location is not None:
        coord = str(message.location.longitude) + ',' + str(message.location.latitude)
        s = requests.get('https://geocode-maps.yandex.ru/1.x/?apikey=' + apikey + '&format=json&geocode=' + coord)

        if len(s.json()['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['metaDataProperty']['GeocoderMetaData']['Address']['Components'][4]['name']) > 0:
            message.text = s.json()['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['metaDataProperty']['GeocoderMetaData']['Address']['Components'][4]['name']
            after_text_2(message)
        else:
            bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –í–∞—à –∞–¥—Ä–µ—Å')

@bot.message_handler()
def user_text(message):
    get_message_bot = message.text.lower()
    if get_message_bot == "–ø–æ–º–æ—â—å":
        mess = f"""–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –ª—é–±–æ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ —Å–ª–µ–¥—É–π—Ç–µ –¥–∞–Ω–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:
–î–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "/weather" –∏–ª–∏ "–ü–æ–≥–æ–¥–∞", –¥–∞–ª–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –ø–æ—Å–µ–ª–∫–∞.
–î–ª—è –≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ —á–µ—Ä–µ–∑ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–≥–æ–¥–∞"."""
        bot.send_message(message.chat.id, mess, parse_mode='html')
    elif get_message_bot == "–ø–æ–≥–æ–¥–∞":
        msg = bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞: ')
        bot.register_next_step_handler(msg, after_text_2)
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ —Ä–∞–∑!üò¢", parse_mode='html')

bot.polling(none_stop=True, interval=0)